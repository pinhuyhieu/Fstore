package com.example.fpoly.controller;

import com.example.fpoly.entity.*;
import com.example.fpoly.service.*;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@RestController
@RequestMapping("/api/cart/details")
@RequiredArgsConstructor
public class GioHangChiTietController {
    private final GioHangChiTietService gioHangChiTietService;
    private final GioHangService gioHangService;
    private final SanPhamCTService sanPhamCTService;
    private final UserService userService;

    // üõí Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng tr√™n JSP
    @GetMapping
    public String getCartPage(Model model, @AuthenticationPrincipal UserDetails userDetails) {
        // üîπ L·∫•y th√¥ng tin User t·ª´ UserDetails
        User user = userService.findByUsername(userDetails.getUsername())
                .orElseThrow(() -> new RuntimeException("‚ùå Kh√¥ng t√¨m th·∫•y user"));

        // üîπ L·∫•y gi·ªè h√†ng c·ªßa user
        GioHang gioHang = gioHangService.getGioHangByUser(user);
        List<GioHangChiTiet> cartDetails = gioHangChiTietService.getCartDetails(gioHang);

        // üîπ T√≠nh t·ªïng ti·ªÅn
        BigDecimal tongTien = cartDetails.stream()
                .map(item -> item.getSanPhamChiTiet().getGia().multiply(BigDecimal.valueOf(item.getSoLuong()))) // ‚úÖ S·ª≠a l·ªói
                .reduce(BigDecimal.ZERO, BigDecimal::add);

        // üîπ Truy·ªÅn d·ªØ li·ªáu sang JSP
        model.addAttribute("gioHangChiTietList", cartDetails);
        model.addAttribute("tongTien", tongTien);

        return "/cart"; // Tr·∫£ v·ªÅ trang cart.jsp
    }


    // ‚ûï Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
    @PostMapping("/add")
    public ResponseEntity<Map<String, Object>> addToCart(@RequestParam Integer sanPhamChiTietId,
                                                         @RequestParam int soLuong,
                                                         @AuthenticationPrincipal UserDetails userDetails) {
        User user = userService.findByUsername(userDetails.getUsername())
                .orElseThrow(() -> new RuntimeException("‚ùå Kh√¥ng t√¨m th·∫•y user"));

        SanPhamChiTiet sanPhamChiTiet = sanPhamCTService.getById(sanPhamChiTietId);
        if (sanPhamChiTiet == null) {
            return ResponseEntity.badRequest().body(Map.of("success", false, "message", "‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m chi ti·∫øt!"));
        }

        gioHangChiTietService.addToCart(user, sanPhamChiTiet, soLuong);
        return ResponseEntity.ok(Map.of("success", true, "message", "‚úÖ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng!"));
    }


    // ‚úèÔ∏è C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
    @PutMapping("/update/{gioHangChiTietId}")
    public ResponseEntity<String> updateQuantity(@PathVariable Integer gioHangChiTietId, @RequestParam int soLuong) {
        try {
            // L·∫•y s·ªë l∆∞·ª£ng t·ªìn kho c·ªßa s·∫£n ph·∫©m
            int soLuongTon = gioHangChiTietService.getSoLuongTon(gioHangChiTietId);

            // Ki·ªÉm tra s·ªë l∆∞·ª£ng y√™u c·∫ßu c√≥ v∆∞·ª£t qu√° t·ªìn kho kh√¥ng
            if (soLuong > soLuongTon) {
                return ResponseEntity.badRequest().body("‚ùå S·ªë l∆∞·ª£ng t·ªìn kho kh√¥ng ƒë·ªß. Hi·ªán ch·ªâ c√≤n " + soLuongTon + " s·∫£n ph·∫©m.");
            }

            // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng n·∫øu h·ª£p l·ªá
            gioHangChiTietService.updateQuantity(gioHangChiTietId, soLuong);
            return ResponseEntity.ok("‚úÖ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng th√†nh c√¥ng.");
        } catch (RuntimeException e) {
            return ResponseEntity.badRequest().body("‚ùå " + e.getMessage());
        }
    }

    // üóë X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
    @DeleteMapping("/remove/{gioHangChiTietId}")
    public ResponseEntity<String> removeFromCart(@PathVariable Integer gioHangChiTietId) {
        gioHangChiTietService.removeById(gioHangChiTietId);
        return ResponseEntity.ok("‚úÖ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi gi·ªè h√†ng.");
    }
}

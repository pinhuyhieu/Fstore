package com.example.fpoly.controller;

import com.example.fpoly.entity.*;
import com.example.fpoly.service.*;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.annotation.AuthenticationPrincipal;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.math.BigDecimal;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@RestController
@RequestMapping("/api/cart/details")
@RequiredArgsConstructor
public class GioHangChiTietController {
    private final GioHangChiTietService gioHangChiTietService;
    private final GioHangService gioHangService;
    private final SanPhamCTService sanPhamCTService;
    private final UserService userService;

    // üõí Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng tr√™n JSP



    // ‚ûï Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
    @PostMapping("/add")
    public ResponseEntity<Map<String, Object>> addToCart(@RequestParam Integer sanPhamChiTietId,
                                                         @RequestParam int soLuong,
                                                         @AuthenticationPrincipal UserDetails userDetails) {
        User user = userService.findByUsername(userDetails.getUsername())
                .orElseThrow(() -> new RuntimeException("‚ùå Kh√¥ng t√¨m th·∫•y user"));

        SanPhamChiTiet sanPhamChiTiet = sanPhamCTService.getById(sanPhamChiTietId);
        if (sanPhamChiTiet == null) {
            return ResponseEntity.badRequest().body(Map.of("success", false, "message", "‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m chi ti·∫øt!"));
        }

        gioHangChiTietService.addToCart(user, sanPhamChiTiet, soLuong);
        return ResponseEntity.ok(Map.of("success", true, "message", "‚úÖ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng!"));
    }


    // ‚úèÔ∏è C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè h√†ng
    @PutMapping("/update/{gioHangChiTietId}")
    public ResponseEntity<String> updateQuantity(@PathVariable Integer gioHangChiTietId, @RequestParam int soLuong) {
        try {
            // L·∫•y s·ªë l∆∞·ª£ng t·ªìn kho c·ªßa s·∫£n ph·∫©m
            int soLuongTon = gioHangChiTietService.getSoLuongTon(gioHangChiTietId);

            // Ki·ªÉm tra s·ªë l∆∞·ª£ng y√™u c·∫ßu c√≥ v∆∞·ª£t qu√° t·ªìn kho kh√¥ng
            if (soLuong > soLuongTon) {
                // N·∫øu s·ªë l∆∞·ª£ng y√™u c·∫ßu v∆∞·ª£t qu√° t·ªìn kho, tr·∫£ v·ªÅ th√¥ng b√°o l·ªói
                return ResponseEntity.badRequest().body("‚ùå S·ªë l∆∞·ª£ng t·ªìn kho kh√¥ng ƒë·ªß. Hi·ªán ch·ªâ c√≤n " + soLuongTon + " s·∫£n ph·∫©m.");
            }

            // N·∫øu s·ªë l∆∞·ª£ng h·ª£p l·ªá, c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng trong gi·ªè h√†ng
            gioHangChiTietService.updateQuantity(gioHangChiTietId, soLuong);

            // Tr·∫£ v·ªÅ th√¥ng b√°o th√†nh c√¥ng
            return ResponseEntity.ok("‚úÖ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng th√†nh c√¥ng.");
        } catch (RuntimeException e) {
            // X·ª≠ l√Ω l·ªói n·∫øu c√≥ v·∫•n ƒë·ªÅ v·ªõi vi·ªác c·∫≠p nh·∫≠t
            return ResponseEntity.badRequest().body("‚ùå " + e.getMessage());
        }
    }


    // üóë X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
    @DeleteMapping("/remove/{gioHangChiTietId}")
    public ResponseEntity<String> removeFromCart(@PathVariable Integer gioHangChiTietId) {
        gioHangChiTietService.removeById(gioHangChiTietId);
        return ResponseEntity.ok("‚úÖ S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c x√≥a kh·ªèi gi·ªè h√†ng.");
    }
}
